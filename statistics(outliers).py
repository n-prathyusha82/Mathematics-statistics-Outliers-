# -*- coding: utf-8 -*-
"""Statistics(Outliers)

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Nx1XZ3CzGw4yPHww2gnTjEN6uKF9UgVZ

**Outliers**
"""

# Commented out IPython magic to ensure Python compatibility.
import numpy as np
import matplotlib.pyplot as plt
# %matplotlib inline

dataset = [11,10,12,14,12,15,14,13,15,102,12,14,17,19,107,10,13,12,14,12,108,12,11,14,13,15,10,14,13,15,10]

plt.hist(dataset)

outliers=[]

def detect_outliers(data):
  threshold=3
  mean=np.mean(data)
  std=np.std(data)

  for i in data:
    z_score=(i-mean)/std
    if np.abs(z_score)> threshold:
      outliers.append(i)

  return outliers

detect_outliers(dataset)

"""**IQR**

 1.Sort the data,
 2.Calculate Q1 and Q3,
 3.IQR(Q3-Q1),
 4.Find the lower fence(q1-1.5(iqr)),
 5.Find the upper fence(q3+1.5(iqr)).
"""

dataset=sorted(dataset)
dataset

q1,q3=np.percentile(dataset,[25,75])
print(q1,q3)

"""**Find the lower fence and upper fence**"""

iqr=q3-q1
print(iqr)

lower_fence=q1-(1.5*iqr)
upper_fence=q3+(1.5*iqr)
print(lower_fence,upper_fence)

import seaborn as sns

sns.boxplot(dataset)

